version: '3'

networks:
  deliagnet:

services:
  nginx:
    image: nginx:stable
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./src/back:/var/www/html
      - ./src/back/docker-services/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - deliagnet

  mysql:
    image: mysql:8.0.21
    container_name: mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes: 
      - ./mysql:/var/lib/mysql
    networks:
      - deliagnet

  php:
    build:
      context: src/back
      dockerfile: docker-services/php/Dockerfile
    container_name: php
    restart: unless-stopped
    volumes:
      - ./src/back:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - deliagnet

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./src/back:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      - deliagnet

  artisan:
    build:
      context: src/back
      dockerfile: docker-services/php/Dockerfile
    container_name: artisan
    volumes:
      - ./src/back:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - deliagnet
      
  node:
    build:
      context: src/front
      dockerfile: Dockerfile
    volumes:
      - ./src/front:/app
    environment:
      - NODE_ENV=dev